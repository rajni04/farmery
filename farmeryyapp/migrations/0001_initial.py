# Generated by Django 3.1 on 2020-10-08 04:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'ADMIN'), (2, 'CUSTOMER')], default=1, max_length=10)),
                ('first_name', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('last_name', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cattype', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Circl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cheading', models.CharField(max_length=50)),
                ('cdesc', models.CharField(max_length=500)),
                ('che', models.CharField(blank=True, max_length=50, null=True)),
                ('cdesc2', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contnt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cheadng', models.CharField(max_length=40)),
                ('cdes', models.CharField(max_length=555)),
            ],
        ),
        migrations.CreateModel(
            name='Homedata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h1_desc', models.CharField(max_length=800)),
                ('h2_brief', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=30)),
                ('phno', models.CharField(max_length=12)),
                ('refphno', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Offerproduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oimg', models.ImageField(blank=True, null=True, upload_to='')),
                ('oproname', models.CharField(max_length=40)),
                ('oprice', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('productname', models.CharField(max_length=30)),
                ('categoryy', models.CharField(blank=True, default=1, max_length=20)),
                ('desc', models.CharField(max_length=30)),
                ('price', models.IntegerField(default=0)),
                ('quantity', models.IntegerField()),
                ('img', models.ImageField(blank=True, null=True, upload_to='')),
                ('discountdesc', models.CharField(blank=True, max_length=50)),
                ('oldprice', models.CharField(blank=True, max_length=10)),
                ('newdiscount', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('protype', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Sliderhome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheadng', models.CharField(max_length=30)),
                ('sdesc', models.CharField(max_length=255)),
                ('simg', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tabt', models.CharField(max_length=100)),
                ('tname', models.CharField(max_length=20)),
                ('timg', models.ImageField(blank=True, null=True, upload_to='')),
                ('tdesc', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headng', models.CharField(max_length=30)),
                ('headng2', models.CharField(max_length=30)),
                ('workdesc', models.CharField(max_length=500)),
                ('workdesc2', models.CharField(max_length=500)),
                ('wimg', models.ImageField(blank=True, null=True, upload_to='')),
                ('wimg2', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subcategory_name', models.CharField(max_length=30)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmeryyapp.category1')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.CharField(max_length=255)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmeryyapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Productview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trialdays', models.CharField(max_length=255)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmeryyapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Product2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('proname', models.CharField(max_length=30)),
                ('pric', models.IntegerField()),
                ('quant', models.IntegerField()),
                ('farmer_name', models.CharField(blank=True, max_length=30)),
                ('orchard', models.CharField(blank=True, max_length=40)),
                ('expted_delivery', models.DateField()),
                ('pre_delivery', models.DateField()),
                ('img', models.ImageField(blank=True, null=True, upload_to='')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmeryyapp.category1')),
                ('subcategory_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='farmeryyapp.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
